{"version":3,"sources":["login.js","ProductManagement.js","Dashboard.js","UserManagement.js","App.js","reportWebVitals.js","index.js"],"names":["Login","_ref","onLogin","username","setUsername","useState","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","isSignUp","setIsSignUp","errorMessage","setErrorMessage","React","createElement","onSubmit","async","e","preventDefault","response","fetch","method","headers","Content-Type","body","JSON","stringify","ok","errorData","json","Error","message","alert","error","console","type","value","onChange","target","placeholder","required","className","user","localStorage","setItem","onClick","Product","products","setProducts","product","setProduct","name","category","price","quantity","editingName","setEditingName","quantityChange","setQuantityChange","useEffect","fetchProducts","data","cachedData","getItem","parse","handleQuantityChange","changeType","quantityChangeValue","parseInt","isNaN","resetForm","style","padding","maxWidth","margin","textAlign","marginBottom","color","width","borderRadius","updatedProduct","parseFloat","backgroundColor","border","marginTop","borderCollapse","map","prod","key","selectedProduct","find","handleEditProduct","cursor","handleDeleteProduct","Dashboard","activeUser","totalQuantity","setTotalQuantity","lowStockProducts","setLowStockProducts","currentImageIndex","setCurrentImageIndex","images","storedProducts","totalQty","reduce","sum","lowStock","filter","interval","setInterval","prevIndex","length","clearInterval","chartData","labels","datasets","label","borderColor","borderWidth","fontSize","boxShadow","index","Bar","options","responsive","plugins","legend","display","tooltip","enabled","callbacks","context","raw","scales","y","beginAtZero","title","text","x","src","alt","height","UserManagement","users","setUsers","email","setEmail","editingIndex","setEditingIndex","fetchUsers","then","catch","inputStyle","boxSizing","buttonStyle","userCardStyle","headingStyle","buttonContainerStyle","justifyContent","gap","handleAddOrUpdateUser","newUser","userId","id","listStyleType","paddingLeft","editUser","deleteUser","navStyle","transition","logoutButtonStyle","App","setActiveUser","showSection","setShowSection","loading","setLoading","navigate","useNavigate","fetchData","endpoint","setState","status","contentType","get","includes","substring","removeItem","errorText","statusText","Routes","Route","path","element","Navigate","to","ProductManagement","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.66d68ab1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [username, setUsername] = useState(''); // For login username\r\n    const [password, setPassword] = useState(''); // For login password\r\n    const [newUsername, setNewUsername] = useState(''); // For sign-up username\r\n    const [newPassword, setNewPassword] = useState(''); // For sign-up password\r\n    const [isSignUp, setIsSignUp] = useState(false); // Switch between login and sign-up\r\n    const [errorMessage, setErrorMessage] = useState(''); // Store any errors\r\n\r\n    /// Handle login submission\r\nconst handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n        const response = await fetch('http://localhost:5000/api/login', {  // Updated URL\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username, password }),  // Send credentials\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Login failed.');\r\n        }\r\n\r\n        const user = await response.json();\r\n        localStorage.setItem('loggedIn', 'true');\r\n        onLogin(user); // Adjust according to your logic\r\n    } catch (error) {\r\n        setErrorMessage('Invalid username or password.');\r\n        console.error(error);\r\n    }\r\n};\r\n\r\n// Handle sign-up submission\r\nconst handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:5000/api/signup', {  // Updated URL\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: newUsername, password: newPassword }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Error during sign-up.');\r\n        }\r\n\r\n        alert('Sign-up successful! You can now log in.');\r\n        setIsSignUp(false); // Switch to login mode\r\n    } catch (error) {\r\n        setErrorMessage('Error during sign-up: ' + error.message);\r\n        console.error(error);\r\n    }\r\n};\r\n    return (\r\n        <div>\r\n            <h1>{isSignUp ? 'Sign Up' : 'Login'} to Wings Cafe Inventory System</h1>\r\n            {isSignUp ? (\r\n                <form onSubmit={handleSignUp}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newUsername}\r\n                        onChange={(e) => setNewUsername(e.target.value)}\r\n                        placeholder=\"New Username\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        placeholder=\"New Password\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <button type=\"submit\">Sign Up</button>\r\n                    <p className=\"error\">{errorMessage}</p>\r\n                </form>\r\n            ) : (\r\n                <form onSubmit={handleLogin}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        placeholder=\"Username\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <button type=\"submit\">Login</button>\r\n                    <p className=\"error\">{errorMessage}</p>\r\n                </form>\r\n            )}\r\n            <button onClick={() => setIsSignUp(!isSignUp)}>\r\n                {isSignUp ? 'Already a user? Log in here' : 'New user? Sign Up here'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Product = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [product, setProduct] = useState({ name: '', category: '', price: '', quantity: '' });\r\n    const [editingName, setEditingName] = useState(null);\r\n    const [quantityChange, setQuantityChange] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/product');\r\n            if (!response.ok) throw new Error('Failed to fetch products');\r\n            const data = await response.json();\r\n            setProducts(data);\r\n            localStorage.setItem('products', JSON.stringify(data));\r\n        } catch (error) {\r\n            console.error('Fetch products error:', error);\r\n            setErrorMessage('Error fetching products. Loading cached data.');\r\n            const cachedData = localStorage.getItem('products');\r\n            if (cachedData) setProducts(JSON.parse(cachedData));\r\n        }\r\n    };\r\n\r\n    const handleSaveProduct = async () => {\r\n        const updatedProduct = {\r\n            ...product,\r\n            price: parseFloat(product.price) || 0,\r\n            quantity: parseInt(product.quantity, 10) || 0,\r\n        };\r\n\r\n        try {\r\n            let response;\r\n            if (editingName) {\r\n                response = await fetch(`http://localhost:5000/api/product/${editingName}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(updatedProduct),\r\n                });\r\n            } else {\r\n                response = await fetch('http://localhost:5000/api/product', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(updatedProduct),\r\n                });\r\n            }\r\n\r\n            if (!response.ok) throw new Error('Failed to save product');\r\n            fetchProducts();\r\n            resetForm();\r\n        } catch (error) {\r\n            console.error('Save product error:', error);\r\n            setErrorMessage('Error saving product');\r\n        }\r\n    };\r\n\r\n    const handleDeleteProduct = async (name) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/product/${name}`, { method: 'DELETE' });\r\n            if (!response.ok) throw new Error('Failed to delete product');\r\n            fetchProducts();\r\n        } catch (error) {\r\n            console.error('Delete product error:', error);\r\n            setErrorMessage('Error deleting product');\r\n        }\r\n    };\r\n\r\n    const handleQuantityChange = async (name, changeType) => {\r\n        const quantityChangeValue = parseInt(quantityChange, 10);\r\n        if (isNaN(quantityChangeValue) || quantityChangeValue <= 0) {\r\n            alert(\"Please enter a valid quantity to add or deduct.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/products/${name}/quantity`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ changeType, quantityChange: quantityChangeValue }),\r\n            });\r\n            if (!response.ok) throw new Error('Failed to update quantity');\r\n            fetchProducts();\r\n            setQuantityChange('');\r\n        } catch (error) {\r\n            console.error('Quantity change error:', error);\r\n            setErrorMessage('Error updating quantity');\r\n        }\r\n    };\r\n\r\n    const handleEditProduct = (name) => {\r\n        const selectedProduct = products.find(prod => prod.name === name);\r\n        setProduct({\r\n            name: selectedProduct.name,\r\n            category: selectedProduct.category,\r\n            price: selectedProduct.price,\r\n            quantity: selectedProduct.quantity,\r\n        });\r\n        setEditingName(name);\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setProduct({ name: '', category: '', price: '', quantity: '' });\r\n        setEditingName(null);\r\n        setErrorMessage('');\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\r\n            <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n                {editingName ? 'Edit Product' : 'Add New Product'}\r\n            </h2>\r\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n            <input\r\n                value={product.name}\r\n                onChange={e => setProduct({ ...product, name: e.target.value })}\r\n                placeholder=\"Product Name\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <input\r\n                value={product.category}\r\n                onChange={e => setProduct({ ...product, category: e.target.value })}\r\n                placeholder=\"Category\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <input\r\n                value={product.price}\r\n                onChange={e => setProduct({ ...product, price: e.target.value })}\r\n                placeholder=\"Price\"\r\n                type=\"number\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <input\r\n                value={product.quantity}\r\n                onChange={e => setProduct({ ...product, quantity: e.target.value })}\r\n                placeholder=\"Quantity\"\r\n                type=\"number\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <button onClick={handleSaveProduct} style={{ padding: '10px 20px', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '4px' }}>\r\n                {editingName ? 'Update Product' : 'Add Product'}\r\n            </button>\r\n\r\n            <h3 style={{ marginTop: '30px' }}>Product List</h3>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Category</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map((prod) => (\r\n                        <tr key={prod.name}>\r\n                            <td>{prod.name}</td>\r\n                            <td>{prod.category}</td>\r\n                            <td>{prod.price}</td>\r\n                            <td>{prod.quantity}</td>\r\n                            <td>\r\n                                <button onClick={() => handleEditProduct(prod.name)} style={{ padding: '5px 10px', backgroundColor: '#f0ad4e', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Edit</button>\r\n                                <button onClick={() => handleDeleteProduct(prod.name)} style={{ padding: '5px 10px', backgroundColor: '#d9534f', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Delete</button>\r\n                                <button onClick={() => handleQuantityChange(prod.name, 'add')} style={{ padding: '5px 10px', backgroundColor: '#5bc0de', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Add Quantity</button>\r\n                                <button onClick={() => handleQuantityChange(prod.name, 'deduct')} style={{ padding: '5px 10px', backgroundColor: '#f0ad4e', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Deduct Quantity</button>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={quantityChange}\r\n                                    onChange={e => setQuantityChange(e.target.value)}\r\n                                    placeholder=\"Enter qty\"\r\n                                    style={{ padding: '5px', margin: '5px 0', width: '80%', borderRadius: '4px' }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\n\r\nconst Dashboard = ({ activeUser }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [totalQuantity, setTotalQuantity] = useState(0);\r\n    const [lowStockProducts, setLowStockProducts] = useState([]);\r\n    const [currentImageIndex, setCurrentImageIndex] = useState(0); // Track current image index\r\n    const images = [\r\n        `${process.env.PUBLIC_URL}/images/biscuits.jpeg`,\r\n        `${process.env.PUBLIC_URL}/images/image2.jpg`,\r\n        `${process.env.PUBLIC_URL}/images/image3.jpg`\r\n    ];\r\n    \r\n\r\n    useEffect(() => {\r\n        // Fetch products from localStorage\r\n        const storedProducts = JSON.parse(localStorage.getItem('products')) || [];\r\n        setProducts(storedProducts);\r\n\r\n        // Calculate total stock and low-stock products\r\n        const totalQty = storedProducts.reduce((sum, product) => sum + product.quantity, 0);\r\n        setTotalQuantity(totalQty);\r\n\r\n        const lowStock = storedProducts.filter(product => product.quantity < 5);\r\n        setLowStockProducts(lowStock);\r\n    }, []);\r\n\r\n    // Image rotation effect using useEffect and setInterval\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n        }, 3000); // Change image every 3 seconds\r\n\r\n        return () => clearInterval(interval); // Cleanup interval on component unmount\r\n    }, [images.length]);\r\n\r\n    // Prepare data for the stock graph\r\n    const chartData = {\r\n        labels: products.map(product => product.name),\r\n        datasets: [\r\n            {\r\n                label: 'Quantity in Stock',\r\n                data: products.map(product => product.quantity),\r\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                callbacks: {\r\n                    label: (context) => `Quantity: ${context.raw}`,\r\n                },\r\n            },\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Quantity',\r\n                },\r\n            },\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Product Name',\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', backgroundColor: '#f4f4f4', borderRadius: '8px', maxWidth: '800px', margin: '0 auto' }}>\r\n            <h1 style={{ color: '#333', fontSize: '24px', textAlign: 'center' }}>\r\n                Welcome to Wings Cafe Inventory Management, {activeUser}\r\n            </h1>\r\n\r\n            {/* Stock summary */}\r\n            <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px' }}>Stock Summary</h2>\r\n                <p>Total Products: {products.length}</p>\r\n                <p>Total Stock Quantity: {totalQuantity}</p>\r\n                <p>Low Stock Products:</p>\r\n                <ul>\r\n                    {lowStockProducts.map((product, index) => (\r\n                        <li key={index} style={{ color: 'red' }}>\r\n                            {product.name} - Only {product.quantity} left\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Stock chart */}\r\n            <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px', textAlign: 'center' }}>Stock Quantity Chart</h2>\r\n                <Bar data={chartData} options={chartOptions} />\r\n            </div>\r\n\r\n            {/* Product Image Rotation */}\r\n            <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)', textAlign: 'center' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px' }}>Product Images</h2>\r\n                <img\r\n                    src={images[currentImageIndex]}\r\n                    alt={`Product ${currentImageIndex + 1}`}\r\n                    style={{ width: '200px', height: 'auto', margin: '0 auto' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction UserManagement() {\r\n    const [users, setUsers] = useState([]);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n    // Fetch users from the server\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const fetchUsers = () => {\r\n        fetch('http://localhost:5000/api/users')\r\n            .then(response => response.json())\r\n            .then(data => setUsers(data))\r\n            .catch(error => console.error('Error fetching users:', error));\r\n    };\r\n\r\n    const handleAddOrUpdateUser = () => {\r\n        const newUser = { username, password, email };\r\n\r\n        if (editingIndex !== null) {\r\n            const userId = users[editingIndex].id;\r\n            fetch(`http://localhost:5000/api/users/${userId}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(newUser),\r\n            })\r\n                .then(fetchUsers)\r\n                .catch(error => console.error('Error updating user:', error));\r\n        } else {\r\n            fetch('http://localhost:5000/api/users', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(newUser),\r\n            })\r\n                .then(fetchUsers)\r\n                .catch(error => console.error('Error adding user:', error));\r\n        }\r\n\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setUsername('');\r\n        setPassword('');\r\n        setEmail('');\r\n        setEditingIndex(null);\r\n    };\r\n\r\n    const editUser = index => {\r\n        const user = users[index];\r\n        setUsername(user.username);\r\n        setPassword(user.password);\r\n        setEmail(user.email);\r\n        setEditingIndex(index);\r\n    };\r\n\r\n    const deleteUser = index => {\r\n        const userId = users[index].id;\r\n        fetch(`http://localhost:5000/api/users/${userId}`, {\r\n            method: 'DELETE',\r\n        })\r\n            .then(fetchUsers)\r\n            .catch(error => console.error('Error deleting user:', error));\r\n    };\r\n    // Inline styles\r\n    const containerStyle = {\r\n        padding: '20px',\r\n        backgroundColor: '#f4f4f4',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        width: '800px',\r\n        margin: 'auto',\r\n    };\r\n\r\n    const inputStyle = {\r\n        marginBottom: '10px',\r\n        padding: '8px',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ccc',\r\n    };\r\n\r\n    const buttonStyle = {\r\n        backgroundColor: '#007bff',\r\n        color: 'white',\r\n        padding: '10px 20px',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        width: '100%',\r\n        marginTop: '10px',\r\n    };\r\n\r\n    const userCardStyle = {\r\n        backgroundColor: '#ffffff',\r\n        padding: '15px',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n        marginBottom: '10px',\r\n    };\r\n\r\n    const headingStyle = {\r\n        textAlign: 'center',\r\n        color: '#333',\r\n    };\r\n\r\n    const listStyle = {\r\n        listStyleType: 'none',\r\n        paddingLeft: '0',\r\n    };\r\n\r\n    const buttonContainerStyle = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        gap: '10px', // Adds space between buttons\r\n        marginTop: '10px',\r\n    };\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <h2 style={headingStyle}>User Management</h2>\r\n\r\n            {/* User Form */}\r\n            <input\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n                style={inputStyle}\r\n            />\r\n            <button onClick={handleAddOrUpdateUser} style={buttonStyle}>\r\n                {editingIndex !== null ? 'Update' : 'Add'} User\r\n            </button>\r\n\r\n            <h3 style={headingStyle}>User List</h3>\r\n            {users.length === 0 ? (\r\n                <p style={{ textAlign: 'center' }}>No users available.</p>\r\n            ) : (\r\n                <ul style={listStyle}>\r\n                    {users.map((user, index) => (\r\n                        <li key={index} style={userCardStyle}>\r\n                            <h4>{user.username}</h4>\r\n                            <p>Email: {user.email}</p>\r\n                            {/* Align Edit and Delete buttons */}\r\n                            <div style={buttonContainerStyle}>\r\n                                <button\r\n                                    onClick={() => editUser(index)}\r\n                                    style={{ ...buttonStyle, backgroundColor: '#007bff', width: 'auto' }}\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => deleteUser(index)}\r\n                                    style={{ ...buttonStyle, backgroundColor: '#e74c3c', width: 'auto' }}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserManagement;\r\n","import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './login';\nimport ProductManagement from './ProductManagement';\nimport Dashboard from './Dashboard';\nimport UserManagement from './UserManagement';\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [products, setProducts] = useState([]);\n    const [activeUser, setActiveUser] = useState(null);\n    const [showSection, setShowSection] = useState('login');\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(null); // State for error messages\n\n    const navigate = useNavigate();\n\n    // Helper function to fetch data from the backend with improved error handling\n    const fetchData = async (endpoint, setState) => {\n        try {\n            setLoading(true);\n            const response = await fetch(endpoint);\n\n            // Check if the response is ok (status 200)\n            if (!response.ok) {\n                throw new Error(`Failed to fetch ${endpoint}. Status: ${response.status}`);\n            }\n\n            // Check if the response contains JSON\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n                const data = await response.json();\n                setState(data);\n            } else {\n                // If response is not JSON, log the HTML content for debugging\n                const text = await response.text();\n                setErrorMessage(`Expected JSON but got HTML content: ${text.substring(0, 200)}`);\n                console.error('Received HTML content:', text); // Log HTML content for debugging\n            }\n        } catch (error) {\n            // If any error occurs, log the error and set the error message\n            console.error(`Error fetching ${endpoint}:`, error);\n            setErrorMessage(`Error fetching data from ${endpoint}: ${error.message}`);\n        } finally {\n            setLoading(false); // Set loading to false after the request completes\n        }\n    };\n\n    // Fetch users and products on initial load\n    useEffect(() => {\n        fetchData('/api/users', setUsers);\n        fetchData('/api/product', setProducts);\n    }, []);\n\n    // Persist active user to localStorage and sync with backend\n    useEffect(() => {\n        if (activeUser) {\n            localStorage.setItem('activeUser', JSON.stringify(activeUser));\n        } else {\n            localStorage.removeItem('activeUser');\n        }\n    }, [activeUser]);\n\n    // Logout function\n    const logout = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch('/api/logout', { method: 'POST' });\n            \n            // Check for success status\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Logout failed: ${errorText || response.statusText}`);\n            }\n    \n            setActiveUser(null);\n            localStorage.removeItem('activeUser');\n            alert('You have been logged out.');\n            navigate('/');\n        } catch (error) {\n            console.error('Error logging out:', error);\n            setErrorMessage(`Error logging out: ${error.message}`);\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    return (\n        <div className=\"App\">\n            {/* Display error message if any */}\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n            {/* Navigation bar visible only when user is logged in */}\n            {activeUser && (\n                <nav style={navStyle}>\n                    <button onClick={() => navigate('/dashboard')} style={buttonStyle}>Dashboard</button>\n                    <button onClick={() => navigate('/productManagement')} style={buttonStyle}>Product Management</button>\n                    <button onClick={() => navigate('/userManagement')} style={buttonStyle}>User Management</button>\n                    <button onClick={logout} style={logoutButtonStyle}>Logout</button>\n                </nav>\n            )}\n\n            {/* Display loading indicator */}\n            {loading && <p>Loading...</p>}\n\n            <Routes>\n                <Route\n                    path=\"/\"\n                    element={\n                        activeUser ? (\n                            <Navigate to=\"/dashboard\" />\n                        ) : (\n                            <Login \n                                setActiveUser={setActiveUser} \n                                users={users} \n                                setShowSection={setShowSection} \n                                showSection={showSection} \n                            />\n                        )\n                    }\n                />\n\n                {/* Protected routes */}\n                <Route\n                    path=\"/dashboard\"\n                    element={activeUser ? <Dashboard products={products} /> : <Navigate to=\"/\" />}\n                />\n                <Route\n                    path=\"/productManagement\"\n                    element={\n                        activeUser ? (\n                            <ProductManagement setProducts={setProducts} products={products} />\n                        ) : (\n                            <Navigate to=\"/\" />\n                        )\n                    }\n                />\n                <Route\n                    path=\"/userManagement\"\n                    element={\n                        activeUser ? (\n                            <UserManagement users={users} setUsers={setUsers} />\n                        ) : (\n                            <Navigate to=\"/\" />\n                        )\n                    }\n                />\n            </Routes>\n        </div>\n    );\n}\n\n// Inline styles for navigation\nconst navStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '15px',\n    marginBottom: '20px',\n    backgroundColor: '#f4f4f4',\n    padding: '10px 0',\n};\n\nconst buttonStyle = {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    transition: 'background-color 0.3s',\n};\n\nconst logoutButtonStyle = {\n    backgroundColor: '#f44336',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    transition: 'background-color 0.3s',\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom'; // Import Router\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}