{"version":3,"sources":["login.js","ProductManagement.js","Dashboard.js","UserManagement.js","App.js","reportWebVitals.js","index.js"],"names":["loginContainerStyle","display","justifyContent","alignItems","height","backgroundColor","formContainerStyle","flexDirection","padding","maxWidth","width","border","borderRadius","boxShadow","headingStyle","fontSize","marginBottom","textAlign","formStyle","inputStyle","outline","transition","buttonStyle","color","cursor","errorMessageStyle","marginTop","toggleButtonStyle","Login","_ref","setActiveUser","setShowSection","showSection","username","setUsername","useState","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","newEmail","setNewEmail","errorMessage","setErrorMessage","users","setUsers","useEffect","savedUsers","JSON","parse","localStorage","getItem","React","createElement","style","onSubmit","e","preventDefault","some","u","email","updatedUsers","setItem","stringify","alert","type","value","onChange","target","placeholder","required","user","find","onClick","Product","products","setProducts","product","setProduct","name","category","price","quantity","editingName","setEditingName","quantityChange","setQuantityChange","fetchProducts","async","response","fetch","ok","Error","data","json","error","console","cachedData","handleQuantityChange","changeType","quantityChangeValue","parseInt","isNaN","method","headers","Content-Type","body","resetForm","margin","updatedProduct","parseFloat","borderCollapse","map","prod","key","selectedProduct","handleEditProduct","handleDeleteProduct","Dashboard","activeUser","totalQuantity","setTotalQuantity","lowStockProducts","setLowStockProducts","currentImageIndex","setCurrentImageIndex","images","storedProducts","totalQty","reduce","sum","lowStock","filter","interval","setInterval","prevIndex","length","clearInterval","chartData","labels","datasets","label","borderColor","borderWidth","index","Bar","options","responsive","plugins","legend","tooltip","enabled","callbacks","context","raw","scales","y","beginAtZero","title","text","x","src","alt","UserManagement","setEmail","editingIndex","setEditingIndex","storedUsers","boxSizing","userCardStyle","buttonContainerStyle","gap","handleAddOrUpdateUser","newUser","listStyleType","paddingLeft","editUser","_","i","deleteUser","navStyle","logoutButtonStyle","App","loading","setLoading","navigate","useNavigate","fetchData","endpoint","setState","status","contentType","get","includes","substring","message","removeItem","className","errorText","statusText","Routes","Route","path","element","Navigate","to","ProductManagement","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.90c1152a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Login = ({ setActiveUser, setShowSection, showSection }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [newEmail, setNewEmail] = useState(''); // New email state\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Initialize users from localStorage\r\n        const savedUsers = JSON.parse(localStorage.getItem('users')) || [];\r\n        setUsers(savedUsers);\r\n    }, []);\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Find the user based on the entered username and password\r\n        const user = users.find(u => u.username === username && u.password === password);\r\n\r\n        if (user) {\r\n            // Successful login\r\n            localStorage.setItem('loggedIn', 'true');\r\n            localStorage.setItem('activeUser', JSON.stringify(user)); // Save active user in localStorage\r\n            setActiveUser(user); // Update the active user state\r\n            setErrorMessage(''); // Clear error message\r\n        } else {\r\n            // Invalid credentials\r\n            setErrorMessage('Invalid username or password.');\r\n        }\r\n    };\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if the username already exists\r\n        if (users.some(u => u.username === newUsername)) {\r\n            setErrorMessage('Username already exists. Please choose another.');\r\n            return;\r\n        }\r\n\r\n        // Check if the email already exists\r\n        if (users.some(u => u.email === newEmail)) {\r\n            setErrorMessage('Email already exists. Please use another.');\r\n            return;\r\n        }\r\n\r\n        // Add new user to the list and save to localStorage\r\n        const updatedUsers = [...users, { username: newUsername, password: newPassword, email: newEmail }];\r\n        setUsers(updatedUsers);\r\n        localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n\r\n        alert(\"Sign-up successful! You can now log in.\");\r\n        setShowSection('login');\r\n    };\r\n\r\n    return (\r\n        <div style={loginContainerStyle}>\r\n            <div style={formContainerStyle}>\r\n                <h1 style={headingStyle}>{showSection === 'signUp' ? \"Sign Up\" : \"Login\"} to Wings Cafe Inventory System</h1>\r\n                {showSection === 'signUp' ? (\r\n                    <form onSubmit={handleSignUp} style={formStyle}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newUsername}\r\n                            onChange={(e) => setNewUsername(e.target.value)}\r\n                            placeholder=\"New Username\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            value={newEmail}\r\n                            onChange={(e) => setNewEmail(e.target.value)}\r\n                            placeholder=\"Email\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            placeholder=\"New Password\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <button type=\"submit\" style={buttonStyle}>\r\n                            Sign Up\r\n                        </button>\r\n                        {errorMessage && <p style={errorMessageStyle}>{errorMessage}</p>}\r\n                    </form>\r\n                ) : (\r\n                    <form onSubmit={handleLogin} style={formStyle}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <button type=\"submit\" style={buttonStyle}>\r\n                            Login\r\n                        </button>\r\n                        {errorMessage && <p style={errorMessageStyle}>{errorMessage}</p>}\r\n                    </form>\r\n                )}\r\n                <button onClick={() => setShowSection(showSection === 'login' ? 'signUp' : 'login')} style={toggleButtonStyle}>\r\n                    {showSection === 'signUp' ? \"Already a user? Log in here\" : \"New user? Sign Up here\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst loginContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f4f4f4',\r\n};\r\n\r\nconst formContainerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    maxWidth: '400px',\r\n    width: '100%',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#fff',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n};\r\n\r\nconst headingStyle = {\r\n    fontSize: '1.5em',\r\n    marginBottom: '10px',\r\n    textAlign: 'center',\r\n};\r\n\r\nconst formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n};\r\n\r\nconst inputStyle = {\r\n    marginBottom: '10px',\r\n    padding: '8px',\r\n    fontSize: '1em',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    outline: 'none',\r\n    transition: 'border-color 0.3s',\r\n};\r\n\r\nconst buttonStyle = {\r\n    padding: '10px',\r\n    fontSize: '1em',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s',\r\n};\r\n\r\nconst errorMessageStyle = {\r\n    color: 'red',\r\n    marginTop: '10px',\r\n    fontSize: '0.9em',\r\n};\r\n\r\nconst toggleButtonStyle = {\r\n    marginTop: '20px',\r\n    padding: '8px',\r\n    fontSize: '1em',\r\n    backgroundColor: '#008CBA',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s',\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Product = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [product, setProduct] = useState({ name: '', category: '', price: '', quantity: '' });\r\n    const [editingName, setEditingName] = useState(null);\r\n    const [quantityChange, setQuantityChange] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/product');\r\n            if (!response.ok) throw new Error('Failed to fetch products');\r\n            const data = await response.json();\r\n            setProducts(data);\r\n            localStorage.setItem('products', JSON.stringify(data));\r\n        } catch (error) {\r\n            console.error('Fetch products error:', error);\r\n            setErrorMessage('Error fetching products. Loading cached data.');\r\n            const cachedData = localStorage.getItem('products');\r\n            if (cachedData) setProducts(JSON.parse(cachedData));\r\n        }\r\n    };\r\n\r\n    const handleSaveProduct = async () => {\r\n        const updatedProduct = {\r\n            ...product,\r\n            price: parseFloat(product.price) || 0,\r\n            quantity: parseInt(product.quantity, 10) || 0,\r\n        };\r\n\r\n        try {\r\n            let response;\r\n            if (editingName) {\r\n                response = await fetch(`http://localhost:5000/api/product/${editingName}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(updatedProduct),\r\n                });\r\n            } else {\r\n                response = await fetch('http://localhost:5000/api/product', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(updatedProduct),\r\n                });\r\n            }\r\n\r\n            if (!response.ok) throw new Error('Failed to save product');\r\n            fetchProducts();\r\n            resetForm();\r\n        } catch (error) {\r\n            console.error('Save product error:', error);\r\n            setErrorMessage('Error saving product');\r\n        }\r\n    };\r\n\r\n    const handleDeleteProduct = async (name) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/product/${name}`, { method: 'DELETE' });\r\n            if (!response.ok) throw new Error('Failed to delete product');\r\n            fetchProducts();\r\n        } catch (error) {\r\n            console.error('Delete product error:', error);\r\n            setErrorMessage('Error deleting product');\r\n        }\r\n    };\r\n\r\n    const handleQuantityChange = async (name, changeType) => {\r\n        const quantityChangeValue = parseInt(quantityChange, 10);\r\n        if (isNaN(quantityChangeValue) || quantityChangeValue <= 0) {\r\n            alert(\"Please enter a valid quantity to add or deduct.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/products/${name}/quantity`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ changeType, quantityChange: quantityChangeValue }),\r\n            });\r\n            if (!response.ok) throw new Error('Failed to update quantity');\r\n            fetchProducts();\r\n            setQuantityChange('');\r\n        } catch (error) {\r\n            console.error('Quantity change error:', error);\r\n            setErrorMessage('Error updating quantity');\r\n        }\r\n    };\r\n\r\n    const handleEditProduct = (name) => {\r\n        const selectedProduct = products.find(prod => prod.name === name);\r\n        setProduct({\r\n            name: selectedProduct.name,\r\n            category: selectedProduct.category,\r\n            price: selectedProduct.price,\r\n            quantity: selectedProduct.quantity,\r\n        });\r\n        setEditingName(name);\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setProduct({ name: '', category: '', price: '', quantity: '' });\r\n        setEditingName(null);\r\n        setErrorMessage('');\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\r\n            <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n                {editingName ? 'Edit Product' : 'Add New Product'}\r\n            </h2>\r\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n            <input\r\n                value={product.name}\r\n                onChange={e => setProduct({ ...product, name: e.target.value })}\r\n                placeholder=\"Product Name\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <input\r\n                value={product.category}\r\n                onChange={e => setProduct({ ...product, category: e.target.value })}\r\n                placeholder=\"Category\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <input\r\n                value={product.price}\r\n                onChange={e => setProduct({ ...product, price: e.target.value })}\r\n                placeholder=\"Price\"\r\n                type=\"number\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <input\r\n                value={product.quantity}\r\n                onChange={e => setProduct({ ...product, quantity: e.target.value })}\r\n                placeholder=\"Quantity\"\r\n                type=\"number\"\r\n                style={{ padding: '8px', margin: '10px 0', width: '100%', borderRadius: '4px' }}\r\n            />\r\n            <button onClick={handleSaveProduct} style={{ padding: '10px 20px', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '4px' }}>\r\n                {editingName ? 'Update Product' : 'Add Product'}\r\n            </button>\r\n\r\n            <h3 style={{ marginTop: '30px' }}>Product List</h3>\r\n            <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Category</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map((prod) => (\r\n                        <tr key={prod.name}>\r\n                            <td>{prod.name}</td>\r\n                            <td>{prod.category}</td>\r\n                            <td>{prod.price}</td>\r\n                            <td>{prod.quantity}</td>\r\n                            <td>\r\n                                <button onClick={() => handleEditProduct(prod.name)} style={{ padding: '5px 10px', backgroundColor: '#f0ad4e', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Edit</button>\r\n                                <button onClick={() => handleDeleteProduct(prod.name)} style={{ padding: '5px 10px', backgroundColor: '#d9534f', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Delete</button>\r\n                                <button onClick={() => handleQuantityChange(prod.name, 'add')} style={{ padding: '5px 10px', backgroundColor: '#5bc0de', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Add Quantity</button>\r\n                                <button onClick={() => handleQuantityChange(prod.name, 'deduct')} style={{ padding: '5px 10px', backgroundColor: '#f0ad4e', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>Deduct Quantity</button>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={quantityChange}\r\n                                    onChange={e => setQuantityChange(e.target.value)}\r\n                                    placeholder=\"Enter qty\"\r\n                                    style={{ padding: '5px', margin: '5px 0', width: '80%', borderRadius: '4px' }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\n\r\nconst Dashboard = ({ activeUser }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [totalQuantity, setTotalQuantity] = useState(0);\r\n    const [lowStockProducts, setLowStockProducts] = useState([]);\r\n    const [currentImageIndex, setCurrentImageIndex] = useState(0); // Track current image index\r\n    const images = [\r\n        `${process.env.PUBLIC_URL}/images/biscuits.jpeg`,\r\n        `${process.env.PUBLIC_URL}/images/image2.jpg`,\r\n        `${process.env.PUBLIC_URL}/images/image3.jpg`\r\n    ];\r\n    \r\n\r\n    useEffect(() => {\r\n        // Fetch products from localStorage\r\n        const storedProducts = JSON.parse(localStorage.getItem('products')) || [];\r\n        setProducts(storedProducts);\r\n\r\n        // Calculate total stock and low-stock products\r\n        const totalQty = storedProducts.reduce((sum, product) => sum + product.quantity, 0);\r\n        setTotalQuantity(totalQty);\r\n\r\n        const lowStock = storedProducts.filter(product => product.quantity < 5);\r\n        setLowStockProducts(lowStock);\r\n    }, []);\r\n\r\n    // Image rotation effect using useEffect and setInterval\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n        }, 3000); // Change image every 3 seconds\r\n\r\n        return () => clearInterval(interval); // Cleanup interval on component unmount\r\n    }, [images.length]);\r\n\r\n    // Prepare data for the stock graph\r\n    const chartData = {\r\n        labels: products.map(product => product.name),\r\n        datasets: [\r\n            {\r\n                label: 'Quantity in Stock',\r\n                data: products.map(product => product.quantity),\r\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                callbacks: {\r\n                    label: (context) => `Quantity: ${context.raw}`,\r\n                },\r\n            },\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Quantity',\r\n                },\r\n            },\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Product Name',\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', backgroundColor: '#f4f4f4', borderRadius: '8px', maxWidth: '800px', margin: '0 auto' }}>\r\n            <h1 style={{ color: '#333', fontSize: '24px', textAlign: 'center' }}>\r\n                Welcome to Wings Cafe Inventory Management, {activeUser}\r\n            </h1>\r\n\r\n            {/* Stock summary */}\r\n            <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px' }}>Stock Summary</h2>\r\n                <p>Total Products: {products.length}</p>\r\n                <p>Total Stock Quantity: {totalQuantity}</p>\r\n                <p>Low Stock Products:</p>\r\n                <ul>\r\n                    {lowStockProducts.map((product, index) => (\r\n                        <li key={index} style={{ color: 'red' }}>\r\n                            {product.name} - Only {product.quantity} left\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Stock chart */}\r\n            <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px', textAlign: 'center' }}>Stock Quantity Chart</h2>\r\n                <Bar data={chartData} options={chartOptions} />\r\n            </div>\r\n\r\n            {/* Product Image Rotation */}\r\n            <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)', textAlign: 'center' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px' }}>Product Images</h2>\r\n                <img\r\n                    src={images[currentImageIndex]}\r\n                    alt={`Product ${currentImageIndex + 1}`}\r\n                    style={{ width: '200px', height: 'auto', margin: '0 auto' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction UserManagement({ users, setUsers }) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Make sure users are loaded from localStorage when the component mounts\r\n        const storedUsers = JSON.parse(localStorage.getItem('users')) || [];\r\n        setUsers(storedUsers);\r\n    }, [setUsers]);\r\n\r\n    const handleAddOrUpdateUser = () => {\r\n        const newUser = { username, password, email };\r\n        \r\n        if (editingIndex !== null) {\r\n            // Update existing user\r\n            const updatedUsers = [...users];\r\n            updatedUsers[editingIndex] = newUser;\r\n            setUsers(updatedUsers);\r\n            localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n        } else {\r\n            // Add new user\r\n            const updatedUsers = [...users, newUser];\r\n            setUsers(updatedUsers);\r\n            localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n        }\r\n        \r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setUsername('');\r\n        setPassword('');\r\n        setEmail('');\r\n        setEditingIndex(null);\r\n    };\r\n\r\n    const editUser = index => {\r\n        setUsername(users[index].username);\r\n        setPassword(users[index].password);\r\n        setEmail(users[index].email);\r\n        setEditingIndex(index);\r\n    };\r\n\r\n    const deleteUser = index => {\r\n        const updatedUsers = users.filter((_, i) => i !== index);\r\n        setUsers(updatedUsers);\r\n        localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n    };\r\n\r\n    // Inline styles\r\n    const containerStyle = {\r\n        padding: '20px',\r\n        backgroundColor: '#f4f4f4',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        width: '800px',\r\n        margin: 'auto',\r\n    };\r\n\r\n    const inputStyle = {\r\n        marginBottom: '10px',\r\n        padding: '8px',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ccc',\r\n    };\r\n\r\n    const buttonStyle = {\r\n        backgroundColor: '#007bff',\r\n        color: 'white',\r\n        padding: '10px 20px',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        width: '100%',\r\n        marginTop: '10px',\r\n    };\r\n\r\n    const userCardStyle = {\r\n        backgroundColor: '#ffffff',\r\n        padding: '15px',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n        marginBottom: '10px',\r\n    };\r\n\r\n    const headingStyle = {\r\n        textAlign: 'center',\r\n        color: '#333',\r\n    };\r\n\r\n    const listStyle = {\r\n        listStyleType: 'none',\r\n        paddingLeft: '0',\r\n    };\r\n\r\n    const buttonContainerStyle = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        gap: '10px', // Adds space between buttons\r\n        marginTop: '10px',\r\n    };\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <h2 style={headingStyle}>User Management</h2>\r\n\r\n            {/* User Form */}\r\n            <input\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n                style={inputStyle}\r\n            />\r\n            <button onClick={handleAddOrUpdateUser} style={buttonStyle}>\r\n                {editingIndex !== null ? 'Update' : 'Add'} User\r\n            </button>\r\n\r\n            <h3 style={headingStyle}>User List</h3>\r\n            {users.length === 0 ? (\r\n                <p style={{ textAlign: 'center' }}>No users available.</p>\r\n            ) : (\r\n                <ul style={listStyle}>\r\n                    {users.map((user, index) => (\r\n                        <li key={index} style={userCardStyle}>\r\n                            <h4>{user.username}</h4>\r\n                            <p>Email: {user.email}</p>\r\n                            {/* Align Edit and Delete buttons */}\r\n                            <div style={buttonContainerStyle}>\r\n                                <button\r\n                                    onClick={() => editUser(index)}\r\n                                    style={{ ...buttonStyle, backgroundColor: '#007bff', width: 'auto' }}\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => deleteUser(index)}\r\n                                    style={{ ...buttonStyle, backgroundColor: '#e74c3c', width: 'auto' }}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserManagement;\r\n","import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './login';\nimport ProductManagement from './ProductManagement';\nimport Dashboard from './Dashboard';\nimport UserManagement from './UserManagement';\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [products, setProducts] = useState([]);\n    const [activeUser, setActiveUser] = useState(null);\n    const [showSection, setShowSection] = useState('login');\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(null); // State for error messages\n\n    const navigate = useNavigate();\n\n    // Helper function to fetch data from the backend with improved error handling\n    const fetchData = async (endpoint, setState) => {\n        try {\n            setLoading(true);\n            const response = await fetch(endpoint);\n\n            // Check if the response is ok (status 200)\n            if (!response.ok) {\n                throw new Error(`Failed to fetch ${endpoint}. Status: ${response.status}`);\n            }\n\n            // Check if the response contains JSON\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n                const data = await response.json();\n                setState(data);\n            } else {\n                // If response is not JSON, log the HTML content for debugging\n                const text = await response.text();\n                setErrorMessage(`Expected JSON but got HTML content: ${text.substring(0, 200)}`);\n                console.error('Received HTML content:', text); // Log HTML content for debugging\n            }\n        } catch (error) {\n            // If any error occurs, log the error and set the error message\n            console.error(`Error fetching ${endpoint}:`, error);\n            setErrorMessage(`Error fetching data from ${endpoint}: ${error.message}`);\n        } finally {\n            setLoading(false); // Set loading to false after the request completes\n        }\n    };\n\n    // Fetch users and products on initial load\n    useEffect(() => {\n        fetchData('/api/users', setUsers);\n        fetchData('/api/product', setProducts);\n    }, []);\n\n    // Persist active user to localStorage and sync with backend\n    useEffect(() => {\n        if (activeUser) {\n            localStorage.setItem('activeUser', JSON.stringify(activeUser));\n        } else {\n            localStorage.removeItem('activeUser');\n        }\n    }, [activeUser]);\n\n    // Logout function\n    const logout = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch('/api/logout', { method: 'POST' });\n            \n            // Check for success status\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Logout failed: ${errorText || response.statusText}`);\n            }\n    \n            setActiveUser(null);\n            localStorage.removeItem('activeUser');\n            alert('You have been logged out.');\n            navigate('/');\n        } catch (error) {\n            console.error('Error logging out:', error);\n            setErrorMessage(`Error logging out: ${error.message}`);\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    return (\n        <div className=\"App\">\n            {/* Display error message if any */}\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n            {/* Navigation bar visible only when user is logged in */}\n            {activeUser && (\n                <nav style={navStyle}>\n                    <button onClick={() => navigate('/dashboard')} style={buttonStyle}>Dashboard</button>\n                    <button onClick={() => navigate('/productManagement')} style={buttonStyle}>Product Management</button>\n                    <button onClick={() => navigate('/userManagement')} style={buttonStyle}>User Management</button>\n                    <button onClick={logout} style={logoutButtonStyle}>Logout</button>\n                </nav>\n            )}\n\n            {/* Display loading indicator */}\n            {loading && <p>Loading...</p>}\n\n            <Routes>\n                <Route\n                    path=\"/\"\n                    element={\n                        activeUser ? (\n                            <Navigate to=\"/dashboard\" />\n                        ) : (\n                            <Login \n                                setActiveUser={setActiveUser} \n                                users={users} \n                                setShowSection={setShowSection} \n                                showSection={showSection} \n                            />\n                        )\n                    }\n                />\n\n                {/* Protected routes */}\n                <Route\n                    path=\"/dashboard\"\n                    element={activeUser ? <Dashboard products={products} /> : <Navigate to=\"/\" />}\n                />\n                <Route\n                    path=\"/productManagement\"\n                    element={\n                        activeUser ? (\n                            <ProductManagement setProducts={setProducts} products={products} />\n                        ) : (\n                            <Navigate to=\"/\" />\n                        )\n                    }\n                />\n                <Route\n                    path=\"/userManagement\"\n                    element={\n                        activeUser ? (\n                            <UserManagement users={users} setUsers={setUsers} />\n                        ) : (\n                            <Navigate to=\"/\" />\n                        )\n                    }\n                />\n            </Routes>\n        </div>\n    );\n}\n\n// Inline styles for navigation\nconst navStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '15px',\n    marginBottom: '20px',\n    backgroundColor: '#f4f4f4',\n    padding: '10px 0',\n};\n\nconst buttonStyle = {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    transition: 'background-color 0.3s',\n};\n\nconst logoutButtonStyle = {\n    backgroundColor: '#f44336',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    transition: 'background-color 0.3s',\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom'; // Import Router\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}